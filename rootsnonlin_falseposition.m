## Copyright (C) 2020 Heherson Domael
## 
## This program is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## This program is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see
## <https://www.gnu.org/licenses/>.

## -*- texinfo -*- 
## @deftypefn {} {@var{Aroot}, @var{At} =} rootsnonlin_falseposition (@var{A}, @var{Alow}, @var{Aup})
## Solve for the nearest root of nonlinear equation A on the [Alow, Aup] interval
## using method of false position (regula falsi).
## 
## @var{Aroot} returns the nearest root of A on [Alow, Aup].
## 
## @var{At} returns the table generated by computing the nearest root of A on [Alow, Aup].
## 
## @end deftypefn

## Author: Heherson Domael <Heherson Domael@LAPTOP-MQALPEGV>
## Created: 2020-04-29

function [Aroot, At] = rootsnonlin_falseposition (A, Alow, Aup)
  i=1;
  while 1
    Ad=((Aup*A(Alow))-(Alow*A(Aup))) / (A(Alow)-A(Aup));
    flow=A(Alow);
    fup=A(Aup);
    fd=A(Ad);
    if flow*fd>0
      fsign=1;
    else
      fsign=-1;
    endif
    At(i,:)=[i Alow Aup Ad flow fup fd fsign];
    if abs(flow)<=0.00005
      Aroot=Alow;
      break
    endif
    if abs(fup)<=0.00005
      Aroot=Aup;
      break
    endif
    if abs(fd)<=0.00005
      Aroot=Ad;
      break
    endif
    if flow*fd>=0
      Alow=Ad;
    else
      Aup=Ad;
    endif
    i++;
  endwhile
endfunction